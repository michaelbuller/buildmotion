{"version":3,"file":"buildmotion-validation.umd.js","sources":["../../../../libs/validation/src/lib/validation.module.ts","../../../../libs/validation/src/lib/form-validators.ts","../../../../libs/validation/src/buildmotion-validation.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class ValidationModule {}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { RuleConstants } from '@buildmotion/rules-engine';\n\nexport function passwordValidator(): ValidatorFn {\n  const passwordRegularExpressions = [\n    RuleConstants.lowercaseAlphaCharacterRegEx,\n    RuleConstants.uppercaseAlphaCharacterRegEx,\n    RuleConstants.numericCharactersRegEx,\n    RuleConstants.specialCharacterRegEx,\n  ];\n  return (control: AbstractControl): ValidationErrors | null => {\n    return passwordRegularExpressions.some((regExp) => !regExp.test(control.value)) ? { passwordCharacterConstraints: true } : null;\n  };\n}\n\nexport function passwordSpecialCharValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    return !RuleConstants.specialCharacterRegEx.test(control.value) ? { missingSpecialChar: true } : null;\n  };\n}\n\nexport function passwordNumericCharValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    return !RuleConstants.numericCharactersRegEx.test(control.value) ? { missingNumericChar: true } : null;\n  };\n}\n\nexport function passwordUpperCaseCharValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    return !RuleConstants.uppercaseAlphaCharacterRegEx.test(control.value) ? { missingUpperCaseChar: true } : null;\n  };\n}\n\nexport function passwordLowerCaseCharValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    return !RuleConstants.lowercaseAlphaCharacterRegEx.test(control.value) ? { missingLowerCaseChar: true } : null;\n  };\n}\n\nexport function nameValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    return !RuleConstants.unicodeName.test(control.value) ? { invalidName: true } : null;\n  };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["CommonModule","NgModule","RuleConstants"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;YAMA;;;;4IAAa,gBAAgB;6IAAhB,gBAAgB,YAFjBA,mBAAY;6IAEX,gBAAgB,YAFlB,CAACA,mBAAY,CAAC;0HAEZ,gBAAgB;0BAH5BC,WAAQ;2BAAC;4BACR,OAAO,EAAE,CAACD,mBAAY,CAAC;yBACxB;;;iBCFe,iBAAiB;YAC/B,IAAM,0BAA0B,GAAG;gBACjCE,yBAAa,CAAC,4BAA4B;gBAC1CA,yBAAa,CAAC,4BAA4B;gBAC1CA,yBAAa,CAAC,sBAAsB;gBACpCA,yBAAa,CAAC,qBAAqB;aACpC,CAAC;YACF,OAAO,UAAC,OAAwB;gBAC9B,OAAO,0BAA0B,CAAC,IAAI,CAAC,UAAC,MAAM,IAAK,OAAA,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAA,CAAC,GAAG,EAAE,4BAA4B,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;aACjI,CAAC;QACJ,CAAC;iBAEe,4BAA4B;YAC1C,OAAO,UAAC,OAAwB;gBAC9B,OAAO,CAACA,yBAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,kBAAkB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;aACvG,CAAC;QACJ,CAAC;iBAEe,4BAA4B;YAC1C,OAAO,UAAC,OAAwB;gBAC9B,OAAO,CAACA,yBAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,kBAAkB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;aACxG,CAAC;QACJ,CAAC;iBAEe,8BAA8B;YAC5C,OAAO,UAAC,OAAwB;gBAC9B,OAAO,CAACA,yBAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,oBAAoB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;aAChH,CAAC;QACJ,CAAC;iBAEe,8BAA8B;YAC5C,OAAO,UAAC,OAAwB;gBAC9B,OAAO,CAACA,yBAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,oBAAoB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;aAChH,CAAC;QACJ,CAAC;iBAEe,aAAa;YAC3B,OAAO,UAAC,OAAwB;gBAC9B,OAAO,CAACA,yBAAa,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;aACtF,CAAC;QACJ;;QC3CA;;;;;;;;;;;;;;;;;;"}