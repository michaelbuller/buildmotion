{"version":3,"file":"validate-api-response-action.js","sourceRoot":"","sources":["../../../../../../../libs/notifications/src/lib/business/actions/validate-api-response-action.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AAC3G,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAE1B,MAAM,OAAO,yBAA6B,SAAQ,kBAAqB;IACrE,YAAoB,WAA2B;QAC7C,KAAK,CAAC,2BAA2B,CAAC,CAAC;QADjB,gBAAW,GAAX,WAAW,CAAgB;IAE/C,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,WAAW,EAAE,4DAA4D,CAAC,CAAC;QAC7H,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,oBAAoB,CAAC,oBAAoB,EAAE,+CAA+C,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;QAEzJ,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAC5B,IAAI,oBAAoB,CACtB,6BAA6B,EAC7B,sEAAsE,EACtE,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,KAAK,CACN,CACF,CAAC,OAAO,CAAC,IAAI,MAAM,CAClB,sBAAsB,EACtB,4CAA4C,EAC5C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EACpC,IAAI,CAAC,gBAAgB,CACtB,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACjD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAC5B,IAAI,KAAK,CAAC,mBAAmB,EAAE,gEAAgE,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAC1I,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAC5B,IAAI,yBAAyB,CAAC,yBAAyB,EAAE,kDAAkD,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAChI,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC;QACzC,MAAM,MAAM,GAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC9C,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAK,CAAC;QAC/C,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC;QACnC,iBAAiB,CAAC,IAAI,GAAM,MAAM,CAAC;QAEnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,iBAAiB,CAAC,CAAC;IACxC,CAAC;CACF","sourcesContent":["import { ApiResponse } from '@buildmotion/core';\nimport { BusinessActionBase } from './business-action-base';\nimport { Severity } from '@buildmotion/logging';\nimport { IsNotNullOrUndefined, StringIsNotNullEmptyRange, Range, IsTrue } from '@buildmotion/rules-engine';\nimport { ActionResult } from '@buildmotion/actions';\nimport { of } from 'rxjs';\n\nexport class ValidateApiResponseAction<T> extends BusinessActionBase<T> {\n  constructor(private apiResponse: ApiResponse<T>) {\n    super('ValidateApiResponseAction');\n  }\n\n  preValidateAction() {\n    this.loggingService.log(this.actionName, Severity.Information, `Preparing to validate the API response for error messages.`);\n    this.validationContext.addRule(new IsNotNullOrUndefined('ApiResponseIsValid', 'The API response cannot be null or undefined.', this.apiResponse, false));\n\n    if (this.apiResponse) {\n      this.validationContext.addRule(\n        new IsNotNullOrUndefined(\n          'ApiMessagesNotNullUndefined',\n          'The API response messages is not valid. Cannot be null or undefined.',\n          this.apiResponse.messages,\n          false\n        )\n      ).addRule(new IsTrue(\n        \"ContainsValidMessage\",\n        'The API response requires a valid message.',\n        this.apiResponse.messages.length > 0,\n        this.hideRuleMessages\n      ));\n    }\n\n    if (this.apiResponse && this.apiResponse.messages) {\n      this.validationContext.addRule(\n        new Range('MessagesLengthMin', 'The API response must contain at least one valid message item.', this.apiResponse.messages.length, 1, 99)\n      );\n\n      this.apiResponse.messages.forEach((item) => {\n        this.validationContext.addRule(\n          new StringIsNotNullEmptyRange('MessageErrorCodeIsValid', 'The message does not contain a valid error code.', item.code, 1, 200)\n        );\n      });\n    }\n  }\n\n  performAction() {\n    this.actionResult = ActionResult.Success;\n    const result: any = this.apiResponse.messages;\n    const successApiMessage = new ApiResponse<T>();\n    successApiMessage.isSuccess = true;\n    successApiMessage.data = <T>result;\n\n    this.response = of(successApiMessage);\n  }\n}\n"]}