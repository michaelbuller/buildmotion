{"version":3,"file":"data-dog-writer.service.js","sourceRoot":"","sources":["../../../../../../libs/logging/src/lib/log-writers/data-dog-writer.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { ConfigurationService, IConfiguration, IDataDogConfig } from '@buildmotion/configuration';\nimport { ILogEntry } from '../i-log-entry';\nimport { LoggingService } from '../logging.service';\nimport { LogWriter } from './log-writer';\nimport { datadogLogs } from '@datadog/browser-logs';\nimport { Severity } from '../severity.enum';\nimport { datadogRum } from '@datadog/browser-rum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataDogWriterService extends LogWriter {\n  config: IDataDogConfig | undefined;\n\n  constructor(\n    @Optional() private configService: ConfigurationService,\n    private loggingService: LoggingService,\n  ) {\n    super();\n    if (this.configService && this.loggingService) {\n      this.configService.settings$.subscribe((settings) =>\n        this.handleSettings(settings)\n      );\n      this.loggingService.logEntries$.subscribe((entry) =>\n        this.handleLogEntry(entry)\n      );\n    }\n  }\n\n  handleLogEntry(entry: ILogEntry) {\n    if (this.hasWriter) {\n      this.targetEntry = entry;\n      this.execute();\n    }\n  }\n\n  handleSettings(settings: IConfiguration) {\n    if (settings) {\n      this.config = settings.dataDogConfig;\n      this.hasWriter = true;\n      console.log(`Initializing [DataDog] writer for logging.`);\n\n      /**\n       * Use to initialize client-browser log transfer to DataDog;\n       */\n      datadogLogs.init({\n        clientToken: this.config.logs.clientToken,\n        site: this.config.logs.site,\n        forwardErrorsToLogs: this.config.logs.forwardErrorsToLogs,\n        sampleRate: this.config.logs.sampleRate\n      });\n\n      /**\n       * Note: The trackInteractions initialization parameter enables the automatic collection of user\n       * clicks in your application.Sensitive and private data contained on your pages may be included to\n       * identify the elements interacted with.\n       *\n       * version: Specify a version number to identify the deployed version of your application in Datadog\n       */\n      datadogRum.init({\n        applicationId: this.config.realUserMonitoring.applicationId,\n        clientToken: this.config.realUserMonitoring.clientToken,\n        site: this.config.realUserMonitoring.site,\n        service: this.config.realUserMonitoring.service,\n        env: this.config.realUserMonitoring.env,\n        // Specify a version number to identify the deployed version of your application in Datadog\n        version: this.config.realUserMonitoring.version,\n        sampleRate: this.config.realUserMonitoring.sampleRate,\n        trackInteractions: this.config.realUserMonitoring.trackInteractions\n      });\n    }\n  }\n\n  /**\n   * Use to perform an setup or configuration of the [writer].\n   * The [setup] method runs on all executions of the writer - and\n   * is called before the [write] method.\n   */\n  public setup(): void {\n    if (this.hasWriter && this.config && this.targetEntry) {\n      try {\n        // FIXME: DO WE NEED TO SOMETHING HERE? Nope.\n      } catch (error) {\n        if (error && error instanceof Error) {\n          const message = `${this.targetEntry.application}.DataDogWriter: ${error?.message ?? ''}, ${error?.stack ?? error.stack}`;\n          console.error(message);\n        }\n      }\n    }\n  }\n\n  /**\n   * Use to implement the actual write of the [Log Entry].\n   */\n  public write(): void {\n    if (this.targetEntry) {\n      switch (this.targetEntry.severity) {\n        case Severity.Information:\n          datadogLogs.logger.info(this.targetEntry.application, { ...this.targetEntry });\n          break;\n        case Severity.Warning:\n          datadogLogs.logger.warn(this.targetEntry.application, { ...this.targetEntry });\n          break;\n        case Severity.Error:\n          datadogLogs.logger.error(this.targetEntry.application, { ...this.targetEntry });\n          break;\n        case Severity.Critical:\n          datadogLogs.logger.error(this.targetEntry.application, { ...this.targetEntry });\n          break;\n        case Severity.Debug:\n          datadogLogs.logger.info(this.targetEntry.application, { ...this.targetEntry });\n          break;\n        default:\n          datadogLogs.logger.info(this.targetEntry.application, { ...this.targetEntry });\n      }\n    }\n  }\n\n}\n"]}