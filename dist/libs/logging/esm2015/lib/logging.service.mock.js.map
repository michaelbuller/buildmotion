{"version":3,"file":"logging.service.mock.js","sourceRoot":"","sources":["../../../../../libs/logging/src/lib/logging.service.mock.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAG/B,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;;AAI3C,MAAM,OAAO,kBAAkB;IAD/B;QAEE,oBAAe,GAAG,aAAa,CAAC;QAIhC,OAAE,GAAS,IAAI,CAAC,MAAM,EAAE,CAAC;QAEzB,gBAAW,GAAuB,IAAI,OAAO,EAAa,CAAC;QAG3D,gBAAW,GAAG,oBAAoB,CAAC;QAKnC,YAAO,GAAG,OAAO,CAAC;KAcnB;IAZC,kBAAkB,CAAC,QAAwB;QACzC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,WAAW,EAAE,gBAAgB,QAAQ,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,CAAC;SAC9G;QACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,GAAG,CAAC,MAAc,EAAE,QAAkB,EAAE,OAAe;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;;gHA5BU,kBAAkB;oHAAlB,kBAAkB;4FAAlB,kBAAkB;kBAD9B,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IConfiguration, ILoggingConfig, LoggingConfig } from '@buildmotion/configuration';\nimport { Guid } from 'guid-typescript';\nimport { Subject } from 'rxjs';\nimport { ILogEntry } from './i-log-entry';\nimport { ILoggingService } from './logging.service';\nimport { Severity } from './severity.enum';\n\n\n@Injectable()\nexport class LoggingServiceMock implements ILoggingService {\n  applicationName = 'application';\n  config!: LoggingConfig;\n  configService!: undefined;\n  handleSettings!: () => { unknown: any };\n  id: Guid = Guid.create();\n  isProduction!: boolean;\n  logEntries$: Subject<ILogEntry> = new Subject<ILogEntry>();\n  loggingConfig!: ILoggingConfig;\n  message!: string;\n  serviceName = 'LoggingServiceMock';\n  severity!: Severity;\n  source!: string;\n  stack!: string;\n  timestamp!: Date;\n  version = '0.0.0';\n\n  setupConfiguration(settings: IConfiguration) {\n    if (settings) {\n      this.log(this.serviceName, Severity.Information, `Logging for [${settings.loggingConfig.applicationName}].`);\n    }\n    this.isProduction = false;\n  }\n\n  log(source: string, severity: Severity, message: string) {\n    this.source = source;\n    this.severity = severity;\n    this.message = message;\n  }\n}\n"]}