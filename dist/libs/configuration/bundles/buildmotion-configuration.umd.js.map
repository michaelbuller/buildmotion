{"version":3,"file":"buildmotion-configuration.umd.js","sources":["../../../../libs/configuration/src/lib/configuration-context.ts","../../../../libs/configuration/src/lib/configuration.module.ts","../../../../libs/configuration/src/lib/config/app-environment.enum.ts","../../../../libs/configuration/src/lib/mocks/app-config.mock.ts","../../../../libs/configuration/src/lib/configuration.service.ts","../../../../libs/configuration/src/lib/mocks/configuration.service.mock.ts","../../../../libs/configuration/src/lib/config/error-handling-config.ts","../../../../libs/configuration/src/lib/config/logging-config.ts","../../../../libs/configuration/src/buildmotion-configuration.ts"],"sourcesContent":["import { IConfiguration } from './i-configuration';\n\nexport class ConfigurationContext {\n  config!: IConfiguration;\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigurationContext } from './configuration-context';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class ConfigurationModule {\n  static forRoot(configContext: ConfigurationContext): ModuleWithProviders<ConfigurationModule> {\n    return {\n      ngModule: ConfigurationModule,\n      providers: [\n        {\n          provide: ConfigurationContext,\n          useValue: configContext,\n        },\n      ],\n    };\n  }\n}\n","export enum AppEnvironment {\n  development = 'development',\n  local = 'local',\n  production = 'production',\n  qa = 'qa',\n  stage = 'stage',\n}\n","import { AppEnvironment } from '../config/app-environment.enum';\nimport { IConfiguration } from '../i-configuration';\n\nexport const AppConfigMock: IConfiguration = {\n  apiConfig: {\n    apiURL: 'http://localhost:3333/api',\n    baseUrl: 'https://api.buildmotion.io/',\n    csrf: 'https://api-dev.buildmotion.io/auth2/csrf',\n    health: 'https://api.buildmotion-ui.net/v1/dev/health',\n    version: 'https://api-dev.buildmotion.io/version',\n  },\n  dataDogConfig: {\n    logs: {\n      clientToken: 'MOCK-TOKEN-HERE',\n      forwardErrorsToLogs: false,\n      sampleRate: 100,\n      site: 'datadoghq.com'\n    },\n    realUserMonitoring: {\n      applicationId: 'BEEF-TACO-CORN-GOOD-CORN',\n      clientToken: 'pubCORNBEEFISGOOD0fbc',\n      site: 'datadoghq.com',\n      service: 'buildmotion360nonprod',\n      env: 'non-prod',\n      version: '42.0.0',\n      sampleRate: 100,\n      trackInteractions: true\n    }\n  },\n  loggingConfig: {\n    applicationName: 'buildmotion',\n    isProduction: false,\n  },\n  errorHandlingConfig: {\n    applicationName: 'buildmotion',\n    includeDefaultErrorHandling: true,\n  },\n  webConfig: {\n    applicationName: 'buildmotion',\n    blogURL: 'https://www.medium.com/@angularlicious',\n    companyEffectiveDate: new Date(2020, 10, 1),\n    companyName: 'buildmotion',\n    defaultPageSize: 25,\n    email: 'info@buildmotion.io',\n    googleTagManagerId: 'GTM-12341234',\n    keywordValidationInMilliseconds: 750,\n    pageSizeOptions: [25, 50, 100],\n    reloadDelayAfterNoticeInMinutes: 0,\n    reloadDelayInMinutes: 1439,\n    reloadNoticeDisplayInSeconds: 30,\n    social: {\n      instagram: {\n        name: '',\n        URL: '',\n      },\n      twitter: { name: '', URL: '' },\n    },\n    version: '42.42.42',\n    website: 'buildmotion.io',\n  },\n  version: {\n    environment: AppEnvironment.local,\n    displayNotification: true,\n  },\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Subject, ReplaySubject, Observable } from 'rxjs';\nimport { IConfiguration } from './i-configuration';\nimport { ConfigurationContext } from './configuration-context';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigurationService implements IConfigurationService {\n  config!: IConfiguration;\n\n  private settingsSubject: Subject<IConfiguration> = new ReplaySubject<IConfiguration>(1);\n  public readonly settings$: Observable<IConfiguration> = this.settingsSubject.asObservable();\n\n  constructor(@Optional() context: ConfigurationContext) {\n    if (context) {\n      this.settingsSubject.next(context.config);\n    }\n  }\n\n  set settings(value) {\n    this.config = value;\n    this.settingsSubject.next(this.config);\n  }\n\n  get settings(): IConfiguration {\n    return this.config;\n  }\n}\nexport interface IConfigurationService {\n  readonly settings$: Observable<IConfiguration>\n}\n","import { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { AppConfigMock } from './app-config.mock';\nimport { IConfiguration } from '../i-configuration';\nimport { IConfigurationService } from '../configuration.service';\nimport { Injectable, Optional } from '@angular/core';\nimport { ConfigurationContext } from '../configuration-context';\n\n@Injectable()\nexport class ConfigurationServiceMock implements IConfigurationService {\n  private settingsSubject: Subject<IConfiguration> = new ReplaySubject<IConfiguration>(1);\n  public readonly settings$: Observable<IConfiguration> = this.settingsSubject.asObservable();\n  config = AppConfigMock;\n\n  constructor(@Optional() context: ConfigurationContext) {\n    if (context) {\n      this.settingsSubject.next(context.config);\n    }\n  }\n\n  set settings(value: IConfiguration) {\n    this.config = value;\n    if (this.config) {\n      this.settingsSubject.next(this.config);\n    }\n  }\n\n  get settings(): IConfiguration {\n    return this.config;\n  }\n}\n","import { IErrorHandingConfig } from './i-error-handling-config';\n\nexport class ErrorHandlingConfig implements IErrorHandingConfig {\n  applicationName!: string;\n  includeDefaultErrorHandling = false;\n}\n","import { ILoggingConfig } from './i-logging-config';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoggingConfig implements ILoggingConfig {\n  applicationName!: string;\n  isProduction = false;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["CommonModule","NgModule","AppEnvironment","ReplaySubject","Injectable","Optional"],"mappings":"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"}