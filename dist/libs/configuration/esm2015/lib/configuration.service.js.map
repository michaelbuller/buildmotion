{"version":3,"file":"configuration.service.js","sourceRoot":"","sources":["../../../../../libs/configuration/src/lib/configuration.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAW,aAAa,EAAc,MAAM,MAAM,CAAC;AAE1D,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;;;AAK/D,MAAM,OAAO,oBAAoB;IAM/B,YAAwB,OAA6B;QAH7C,oBAAe,GAA4B,IAAI,aAAa,CAAiB,CAAC,CAAC,CAAC;QACxE,cAAS,GAA+B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAG1F,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,IAAI,QAAQ,CAAC,KAAK;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;;kHAnBU,oBAAoB;sHAApB,oBAAoB,cAFnB,MAAM;4FAEP,oBAAoB;kBAHhC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAOc,QAAQ","sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { Subject, ReplaySubject, Observable } from 'rxjs';\nimport { IConfiguration } from './i-configuration';\nimport { ConfigurationContext } from './configuration-context';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigurationService implements IConfigurationService {\n  config!: IConfiguration;\n\n  private settingsSubject: Subject<IConfiguration> = new ReplaySubject<IConfiguration>(1);\n  public readonly settings$: Observable<IConfiguration> = this.settingsSubject.asObservable();\n\n  constructor(@Optional() context: ConfigurationContext) {\n    if (context) {\n      this.settingsSubject.next(context.config);\n    }\n  }\n\n  set settings(value) {\n    this.config = value;\n    this.settingsSubject.next(this.config);\n  }\n\n  get settings(): IConfiguration {\n    return this.config;\n  }\n}\nexport interface IConfigurationService {\n  readonly settings$: Observable<IConfiguration>\n}\n"]}