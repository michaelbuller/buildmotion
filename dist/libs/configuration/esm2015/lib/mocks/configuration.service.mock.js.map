{"version":3,"file":"configuration.service.mock.js","sourceRoot":"","sources":["../../../../../../libs/configuration/src/lib/mocks/configuration.service.mock.ts"],"names":[],"mappings":"AAAA,OAAO,EAAc,aAAa,EAAW,MAAM,MAAM,CAAC;AAE1D,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAGlD,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;;;AAGhE,MAAM,OAAO,wBAAwB;IAKnC,YAAwB,OAA6B;QAJ7C,oBAAe,GAA4B,IAAI,aAAa,CAAiB,CAAC,CAAC,CAAC;QACxE,cAAS,GAA+B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAC5F,WAAM,GAAG,aAAa,CAAC;QAGrB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,IAAI,QAAQ,CAAC,KAAqB;QAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACxC;IACH,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;;sHApBU,wBAAwB;0HAAxB,wBAAwB;4FAAxB,wBAAwB;kBADpC,UAAU;;0BAMI,QAAQ","sourcesContent":["import { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { AppConfigMock } from './app-config.mock';\nimport { IConfiguration } from '../i-configuration';\nimport { IConfigurationService } from '../configuration.service';\nimport { Injectable, Optional } from '@angular/core';\nimport { ConfigurationContext } from '../configuration-context';\n\n@Injectable()\nexport class ConfigurationServiceMock implements IConfigurationService {\n  private settingsSubject: Subject<IConfiguration> = new ReplaySubject<IConfiguration>(1);\n  public readonly settings$: Observable<IConfiguration> = this.settingsSubject.asObservable();\n  config = AppConfigMock;\n\n  constructor(@Optional() context: ConfigurationContext) {\n    if (context) {\n      this.settingsSubject.next(context.config);\n    }\n  }\n\n  set settings(value: IConfiguration) {\n    this.config = value;\n    if (this.config) {\n      this.settingsSubject.next(this.config);\n    }\n  }\n\n  get settings(): IConfiguration {\n    return this.config;\n  }\n}\n"]}