{"version":3,"file":"http-token-interceptor.js","sourceRoot":"","sources":["../../../../../libs/http-service/src/lib/http-token-interceptor.ts"],"names":[],"mappings":"AAAA,uDAAuD;AACvD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;;;AAElE,MAAM,OAAO,oBAAoB;IAE/B,YACU,aAAmC;QAAnC,kBAAa,GAAb,aAAa,CAAsB;IAG7C,CAAC;IACD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACxD,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QAC9D,IACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;YAChE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC;YACnC,KAAK;YACL,QAAQ,EACR;YACA,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,KAAK,EAAE;iBACjC;aACF,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;kHAvBU,oBAAoB;sHAApB,oBAAoB;4FAApB,oBAAoB;kBADhC,UAAU","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ConfigurationService } from '@buildmotion/configuration';\n@Injectable()\nexport class HttpTokenInterceptor implements HttpInterceptor {\n\n  constructor(\n    private configService: ConfigurationService\n  ) {\n\n  }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('r360-portal-token');\n    const sysAccId = localStorage.getItem('r360-portal-sysAccId');\n    if (\n      request.url.includes(this.configService.config.apiConfig.apiURL) &&\n      !request.url.endsWith('auth/token') &&\n      token &&\n      sysAccId\n    ) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n"]}